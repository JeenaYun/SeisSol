stages:
    - pre_test
    - build 
    - test
    
gpu_test_pre:
    stage: pre_test
    tags:
        - atsccs68-shell
    before_script:
        - git branch -vva
        - echo $commit_author_name
    script:
        - echo "checking availability of atscc68" $HOST
        - echo $GPU_VENDOR $GPU_MODEL
        - git --version
        
ci_builder_pre:
    stage: pre_test
    tags:
        - ci_testing_cc
    before_script:
        - git branch -vva
        - echo $commit_author_name
    script:
        - echo "checking availability of ci_testing_cc"
        - git --version

ci_builder_build:
    stage: build
    tags:
        - ci_testing_cc
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    before_script:
        - git submodule set-url submodules/xdmfwriter https://github.com/
        - git submodule set-url submodules/Device https://github.com/
        - git config submodule.Device.url https://github.com/
        - cat .git/config
        - git submodule --quiet update --init --recursive 
        - wget -q https://syncandshare.lrz.de/dl/fiJNAokgbe2vNU66Ru17DAjT/netcdf-4.6.1.tar.gz
        - wget -q https://github.com/hfp/libxsmm/archive/master.zip
        - sudo apt-get install gcc-8 g++-8 gfortran-8
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
        - sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-8 100
        - sudo apt-get install -qq --yes openmpi-bin openmpi-common libopenmpi-dev hdf5-tools libhdf5-openmpi-dev python3 python3-pip libmetis-dev libparmetis-dev cxxtest
        - gfortran --version
        - pip3 install --upgrade pip
        - pip3 install 'numpy>=1.12.0'
        - pip3 install lxml
        - pip3 install setuptools
        - pip3 install sphinx
        - pip3 install sphinx_rtd_theme
        - cd netcdf-4.6.1 && CC=h5pcc ./configure --prefix=/usr --enable-shared=no --disable-dap && make && sudo make install && cd ..
        - unzip master.zip
        - cd libxsmm-master && make generator && sudo cp bin/libxsmm_gemm_generator /usr/bin && cd ..
    script:
        - echo "now building"
        
gpu_test_build:
    stage: build
    tags:
        - atsccs68-shell
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    before_script:
        - git submodule set-url submodules/xdmfwriter https://github.com/
        - git submodule set-url submodules/Device https://github.com/
        - git config submodule.Device.url https://github.com/
        - cat .git/config
        - git submodule --quiet update --init --recursive 
        - git log --format="%H" -n 1
        - git log --format="%H" -n 1 > commit_id
        - git --no-pager show -s --format='%ae' $commit_id
    script:
        - git clone --recurse-submodules https://github.com/SeisSol/SeisSol
        - git clone https://github.com/7bits-register/convergence-tests.git tests
        - ls
        - cat /etc/os-release
        - cat test_singularity.sh
        - chmod +x test_singularity.sh
        - which singularity 
        - singularity --version
        - singularity pull library://7bits-register/collection/seissol-base.sif:sha256.99a798009fb5845985cc898de558d384bfc8b5354e955037c14896518d2f1820
        - ls
        - singularity run --nv -B $PWD:/home/$(whoami) --env GPU_VENDOR=nvidia --env GPU_MODEL=sm_61 --env HOST=snb ./seissol-base.sif_sha256.99a798009fb5845985cc898de558d384bfc8b5354e955037c14896518d2f1820.sif ./test_singularity.sh


        
